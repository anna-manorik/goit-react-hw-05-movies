{"version":3,"file":"static/js/864.a474f383.chunk.js","mappings":"+PAGe,SAASA,IACtB,IAAQC,GAAWC,EAAAA,EAAAA,IAAU,IAArBD,OACR,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAFoC,wCAIpC,2FACQC,EADR,6CACoDL,EADpD,8DAGyBM,MAAMD,GAC1BE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJN,GAAe,OAAIM,EAAQC,aANjC,0DAJoC,sBAkBpC,OAJAC,EAAAA,EAAAA,YAAU,YAd0B,mCAelCC,KACC,CAACb,KAGF,iCACE,sCACA,wBACGG,EAAYW,OAAS,EAClBX,EAAYY,KAAI,SAAAC,GAAM,OACpB,2BACE,wBACE,mCAAWA,EAAOC,aAEpB,uBAAID,EAAOE,gBAGf,wC,8EC9BG,SAASC,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE","sources":["components/FilmReviews/FilmReviews.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nexport default function FilmReviews() {\r\n  const { filmId } = useParams('');\r\n  const [reviewsList, setReviewsList] = useState([]);\r\n\r\n  async function fetchAPI() {\r\n    const URL = `https://api.themoviedb.org/3/movie/${filmId}/reviews?api_key=893305900bfa999f02bdcec91556216a`;\r\n\r\n    const filmsApi = await fetch(URL)\r\n      .then(responce => responce.json())\r\n      .then(reviews => {\r\n        setReviewsList([...reviews.results]);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchAPI();\r\n  }, [filmId]);\r\n\r\n  return (\r\n    <>\r\n      <p>'REVIEWS'</p>\r\n      <ul>\r\n        {reviewsList.length > 0\r\n          ? reviewsList.map(review => (\r\n              <li>\r\n                <p>\r\n                  <b>Autor: {review.author}</b>\r\n                </p>\r\n                <p>{review.content}</p>\r\n              </li>\r\n            ))\r\n          : 'This fiml have not any reviews'}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["FilmReviews","filmId","useParams","useState","reviewsList","setReviewsList","URL","fetch","then","responce","json","reviews","results","useEffect","fetchAPI","length","map","review","author","content","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}