{"version":3,"file":"static/js/539.6c536dc3.chunk.js","mappings":"+PAGe,SAASA,IACtB,IAAQC,GAAWC,EAAAA,EAAAA,IAAU,IAArBD,OACR,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAFiC,wCAIjC,2FACQC,EADR,6CACoDL,EADpD,8DAGyBM,MAAMD,GAC1BE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJN,GAAY,OAAIM,EAAQC,UAN9B,0DAJiC,sBAkBjC,OAJAC,EAAAA,EAAAA,YAAU,YAduB,mCAe/BC,KACC,CAACb,KAGF,iCACE,mCACA,wBACGG,EAASW,KAAI,SAAAH,GAAI,OAChB,iCACE,2BACE,gBACEI,IAAG,8CAAyCJ,EAAKK,aAA9C,6CACHC,IAAKN,EAAKO,KACVC,MAAM,WAER,mCAAWR,EAAKO,SAChB,uCAAeP,EAAKS,iBAEtB,+B,8EChCG,SAASC,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE","sources":["components/FilmCast/FilmCast.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nexport default function FilmCast() {\r\n  const { filmId } = useParams('');\r\n  const [castList, setCastList] = useState([]);\r\n\r\n  async function fetchAPI() {\r\n    const URL = `https://api.themoviedb.org/3/movie/${filmId}/credits?api_key=893305900bfa999f02bdcec91556216a`;\r\n\r\n    const filmsApi = await fetch(URL)\r\n      .then(responce => responce.json())\r\n      .then(credits => {\r\n        setCastList([...credits.cast]);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchAPI();\r\n  }, [filmId]);\r\n\r\n  return (\r\n    <>\r\n      <p>'CAST'</p>\r\n      <ul>\r\n        {castList.map(cast => (\r\n          <>\r\n            <li>\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/original/${cast.profile_path}?api_key=893305900bfa999f02bdcec91556216a`}\r\n                alt={cast.name}\r\n                width=\"100px\"\r\n              />\r\n              <p>Actor: {cast.name}</p>\r\n              <p>Character: {cast.character}</p>\r\n            </li>\r\n            <hr />\r\n          </>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["FilmCast","filmId","useParams","useState","castList","setCastList","URL","fetch","then","responce","json","credits","cast","useEffect","fetchAPI","map","src","profile_path","alt","name","width","character","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}